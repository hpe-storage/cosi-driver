/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BucketsCapacityHistoricalMetricData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketsCapacityHistoricalMetricData{}

// BucketsCapacityHistoricalMetricData Timeseries data for particular metric type
type BucketsCapacityHistoricalMetricData struct {
	// bucketId
	BucketId NullableString `json:"bucketId,omitempty"`
	// customerId
	CustomerId NullableString `json:"customerId,omitempty"`
	Items []BucketsCapacityMetricSeriesData `json:"items,omitempty"`
	// systemId
	SystemId NullableString `json:"systemId,omitempty"`
	// count of series data
	Total NullableInt32 `json:"total,omitempty"`
}

// NewBucketsCapacityHistoricalMetricData instantiates a new BucketsCapacityHistoricalMetricData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketsCapacityHistoricalMetricData() *BucketsCapacityHistoricalMetricData {
	this := BucketsCapacityHistoricalMetricData{}
	return &this
}

// NewBucketsCapacityHistoricalMetricDataWithDefaults instantiates a new BucketsCapacityHistoricalMetricData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketsCapacityHistoricalMetricDataWithDefaults() *BucketsCapacityHistoricalMetricData {
	this := BucketsCapacityHistoricalMetricData{}
	return &this
}

// GetBucketId returns the BucketId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsCapacityHistoricalMetricData) GetBucketId() string {
	if o == nil || IsNil(o.BucketId.Get()) {
		var ret string
		return ret
	}
	return *o.BucketId.Get()
}

// GetBucketIdOk returns a tuple with the BucketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsCapacityHistoricalMetricData) GetBucketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BucketId.Get(), o.BucketId.IsSet()
}

// HasBucketId returns a boolean if a field has been set.
func (o *BucketsCapacityHistoricalMetricData) HasBucketId() bool {
	if o != nil && o.BucketId.IsSet() {
		return true
	}

	return false
}

// SetBucketId gets a reference to the given NullableString and assigns it to the BucketId field.
func (o *BucketsCapacityHistoricalMetricData) SetBucketId(v string) {
	o.BucketId.Set(&v)
}
// SetBucketIdNil sets the value for BucketId to be an explicit nil
func (o *BucketsCapacityHistoricalMetricData) SetBucketIdNil() {
	o.BucketId.Set(nil)
}

// UnsetBucketId ensures that no value is present for BucketId, not even an explicit nil
func (o *BucketsCapacityHistoricalMetricData) UnsetBucketId() {
	o.BucketId.Unset()
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsCapacityHistoricalMetricData) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsCapacityHistoricalMetricData) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *BucketsCapacityHistoricalMetricData) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *BucketsCapacityHistoricalMetricData) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *BucketsCapacityHistoricalMetricData) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *BucketsCapacityHistoricalMetricData) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsCapacityHistoricalMetricData) GetItems() []BucketsCapacityMetricSeriesData {
	if o == nil {
		var ret []BucketsCapacityMetricSeriesData
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsCapacityHistoricalMetricData) GetItemsOk() ([]BucketsCapacityMetricSeriesData, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BucketsCapacityHistoricalMetricData) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BucketsCapacityMetricSeriesData and assigns it to the Items field.
func (o *BucketsCapacityHistoricalMetricData) SetItems(v []BucketsCapacityMetricSeriesData) {
	o.Items = v
}

// GetSystemId returns the SystemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsCapacityHistoricalMetricData) GetSystemId() string {
	if o == nil || IsNil(o.SystemId.Get()) {
		var ret string
		return ret
	}
	return *o.SystemId.Get()
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsCapacityHistoricalMetricData) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SystemId.Get(), o.SystemId.IsSet()
}

// HasSystemId returns a boolean if a field has been set.
func (o *BucketsCapacityHistoricalMetricData) HasSystemId() bool {
	if o != nil && o.SystemId.IsSet() {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given NullableString and assigns it to the SystemId field.
func (o *BucketsCapacityHistoricalMetricData) SetSystemId(v string) {
	o.SystemId.Set(&v)
}
// SetSystemIdNil sets the value for SystemId to be an explicit nil
func (o *BucketsCapacityHistoricalMetricData) SetSystemIdNil() {
	o.SystemId.Set(nil)
}

// UnsetSystemId ensures that no value is present for SystemId, not even an explicit nil
func (o *BucketsCapacityHistoricalMetricData) UnsetSystemId() {
	o.SystemId.Unset()
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsCapacityHistoricalMetricData) GetTotal() int32 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret int32
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsCapacityHistoricalMetricData) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *BucketsCapacityHistoricalMetricData) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableInt32 and assigns it to the Total field.
func (o *BucketsCapacityHistoricalMetricData) SetTotal(v int32) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *BucketsCapacityHistoricalMetricData) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *BucketsCapacityHistoricalMetricData) UnsetTotal() {
	o.Total.Unset()
}

func (o BucketsCapacityHistoricalMetricData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketsCapacityHistoricalMetricData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BucketId.IsSet() {
		toSerialize["bucketId"] = o.BucketId.Get()
	}
	if o.CustomerId.IsSet() {
		toSerialize["customerId"] = o.CustomerId.Get()
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.SystemId.IsSet() {
		toSerialize["systemId"] = o.SystemId.Get()
	}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	return toSerialize, nil
}

type NullableBucketsCapacityHistoricalMetricData struct {
	value *BucketsCapacityHistoricalMetricData
	isSet bool
}

func (v NullableBucketsCapacityHistoricalMetricData) Get() *BucketsCapacityHistoricalMetricData {
	return v.value
}

func (v *NullableBucketsCapacityHistoricalMetricData) Set(val *BucketsCapacityHistoricalMetricData) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketsCapacityHistoricalMetricData) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketsCapacityHistoricalMetricData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketsCapacityHistoricalMetricData(val *BucketsCapacityHistoricalMetricData) *NullableBucketsCapacityHistoricalMetricData {
	return &NullableBucketsCapacityHistoricalMetricData{value: val, isSet: true}
}

func (v NullableBucketsCapacityHistoricalMetricData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketsCapacityHistoricalMetricData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


