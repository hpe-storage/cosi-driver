/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Buckets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Buckets{}

// Buckets response body for get buckets call
type Buckets struct {
	BucketPolicy *string `json:"bucketPolicy,omitempty"`
	// Field to check if compression is  enabled or disabled
	Compression *bool `json:"compression,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Generation *int32 `json:"generation,omitempty"`
	// id of the bucket
	Id *string `json:"id,omitempty"`
	// Name of the bucket
	Name *string `json:"name,omitempty"`
	// Field to check the quotaLimit set in MB
	QuotaLimitMB *int32 `json:"quotaLimitMB,omitempty"`
	// Field to check the quotaType set on the bucket
	QuotaType *string `json:"quotaType,omitempty"`
	// systemUid where the bucket is created
	SystemUid *string `json:"systemUid,omitempty"`
	// Tags for the bucket
	Tags []BucketTagsInner `json:"tags,omitempty"`
	// tenantId of the customer
	TenantId *string `json:"tenantId,omitempty"`
	// Field to check if versioning is enabled or disabled
	Versioning *string `json:"versioning,omitempty"`
}

// NewBuckets instantiates a new Buckets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuckets() *Buckets {
	this := Buckets{}
	return &this
}

// NewBucketsWithDefaults instantiates a new Buckets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketsWithDefaults() *Buckets {
	this := Buckets{}
	return &this
}

// GetBucketPolicy returns the BucketPolicy field value if set, zero value otherwise.
func (o *Buckets) GetBucketPolicy() string {
	if o == nil || IsNil(o.BucketPolicy) {
		var ret string
		return ret
	}
	return *o.BucketPolicy
}

// GetBucketPolicyOk returns a tuple with the BucketPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetBucketPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.BucketPolicy) {
		return nil, false
	}
	return o.BucketPolicy, true
}

// HasBucketPolicy returns a boolean if a field has been set.
func (o *Buckets) HasBucketPolicy() bool {
	if o != nil && !IsNil(o.BucketPolicy) {
		return true
	}

	return false
}

// SetBucketPolicy gets a reference to the given string and assigns it to the BucketPolicy field.
func (o *Buckets) SetBucketPolicy(v string) {
	o.BucketPolicy = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *Buckets) GetCompression() bool {
	if o == nil || IsNil(o.Compression) {
		var ret bool
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetCompressionOk() (*bool, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *Buckets) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given bool and assigns it to the Compression field.
func (o *Buckets) SetCompression(v bool) {
	o.Compression = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Buckets) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Buckets) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Buckets) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *Buckets) GetGeneration() int32 {
	if o == nil || IsNil(o.Generation) {
		var ret int32
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetGenerationOk() (*int32, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *Buckets) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given int32 and assigns it to the Generation field.
func (o *Buckets) SetGeneration(v int32) {
	o.Generation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Buckets) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Buckets) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Buckets) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Buckets) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Buckets) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Buckets) SetName(v string) {
	o.Name = &v
}

// GetQuotaLimitMB returns the QuotaLimitMB field value if set, zero value otherwise.
func (o *Buckets) GetQuotaLimitMB() int32 {
	if o == nil || IsNil(o.QuotaLimitMB) {
		var ret int32
		return ret
	}
	return *o.QuotaLimitMB
}

// GetQuotaLimitMBOk returns a tuple with the QuotaLimitMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetQuotaLimitMBOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaLimitMB) {
		return nil, false
	}
	return o.QuotaLimitMB, true
}

// HasQuotaLimitMB returns a boolean if a field has been set.
func (o *Buckets) HasQuotaLimitMB() bool {
	if o != nil && !IsNil(o.QuotaLimitMB) {
		return true
	}

	return false
}

// SetQuotaLimitMB gets a reference to the given int32 and assigns it to the QuotaLimitMB field.
func (o *Buckets) SetQuotaLimitMB(v int32) {
	o.QuotaLimitMB = &v
}

// GetQuotaType returns the QuotaType field value if set, zero value otherwise.
func (o *Buckets) GetQuotaType() string {
	if o == nil || IsNil(o.QuotaType) {
		var ret string
		return ret
	}
	return *o.QuotaType
}

// GetQuotaTypeOk returns a tuple with the QuotaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetQuotaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaType) {
		return nil, false
	}
	return o.QuotaType, true
}

// HasQuotaType returns a boolean if a field has been set.
func (o *Buckets) HasQuotaType() bool {
	if o != nil && !IsNil(o.QuotaType) {
		return true
	}

	return false
}

// SetQuotaType gets a reference to the given string and assigns it to the QuotaType field.
func (o *Buckets) SetQuotaType(v string) {
	o.QuotaType = &v
}

// GetSystemUid returns the SystemUid field value if set, zero value otherwise.
func (o *Buckets) GetSystemUid() string {
	if o == nil || IsNil(o.SystemUid) {
		var ret string
		return ret
	}
	return *o.SystemUid
}

// GetSystemUidOk returns a tuple with the SystemUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetSystemUidOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUid) {
		return nil, false
	}
	return o.SystemUid, true
}

// HasSystemUid returns a boolean if a field has been set.
func (o *Buckets) HasSystemUid() bool {
	if o != nil && !IsNil(o.SystemUid) {
		return true
	}

	return false
}

// SetSystemUid gets a reference to the given string and assigns it to the SystemUid field.
func (o *Buckets) SetSystemUid(v string) {
	o.SystemUid = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Buckets) GetTags() []BucketTagsInner {
	if o == nil {
		var ret []BucketTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Buckets) GetTagsOk() ([]BucketTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Buckets) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BucketTagsInner and assigns it to the Tags field.
func (o *Buckets) SetTags(v []BucketTagsInner) {
	o.Tags = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Buckets) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Buckets) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Buckets) SetTenantId(v string) {
	o.TenantId = &v
}

// GetVersioning returns the Versioning field value if set, zero value otherwise.
func (o *Buckets) GetVersioning() string {
	if o == nil || IsNil(o.Versioning) {
		var ret string
		return ret
	}
	return *o.Versioning
}

// GetVersioningOk returns a tuple with the Versioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Buckets) GetVersioningOk() (*string, bool) {
	if o == nil || IsNil(o.Versioning) {
		return nil, false
	}
	return o.Versioning, true
}

// HasVersioning returns a boolean if a field has been set.
func (o *Buckets) HasVersioning() bool {
	if o != nil && !IsNil(o.Versioning) {
		return true
	}

	return false
}

// SetVersioning gets a reference to the given string and assigns it to the Versioning field.
func (o *Buckets) SetVersioning(v string) {
	o.Versioning = &v
}

func (o Buckets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Buckets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketPolicy) {
		toSerialize["bucketPolicy"] = o.BucketPolicy
	}
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.QuotaLimitMB) {
		toSerialize["quotaLimitMB"] = o.QuotaLimitMB
	}
	if !IsNil(o.QuotaType) {
		toSerialize["quotaType"] = o.QuotaType
	}
	if !IsNil(o.SystemUid) {
		toSerialize["systemUid"] = o.SystemUid
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Versioning) {
		toSerialize["versioning"] = o.Versioning
	}
	return toSerialize, nil
}

type NullableBuckets struct {
	value *Buckets
	isSet bool
}

func (v NullableBuckets) Get() *Buckets {
	return v.value
}

func (v *NullableBuckets) Set(val *Buckets) {
	v.value = val
	v.isSet = true
}

func (v NullableBuckets) IsSet() bool {
	return v.isSet
}

func (v *NullableBuckets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuckets(val *Buckets) *NullableBuckets {
	return &NullableBuckets{value: val, isSet: true}
}

func (v NullableBuckets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuckets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


