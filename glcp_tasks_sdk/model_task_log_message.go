/*
Tasks REST APIs

APIs to get information about the tasks

API version: 0.1.0
Contact: sc-eng-tasks-ms@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TaskLogMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskLogMessage{}

// TaskLogMessage struct for TaskLogMessage
type TaskLogMessage struct {
	Message string `json:"message"`
	TimestampAt time.Time `json:"timestampAt"`
}

type _TaskLogMessage TaskLogMessage

// NewTaskLogMessage instantiates a new TaskLogMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskLogMessage(message string, timestampAt time.Time) *TaskLogMessage {
	this := TaskLogMessage{}
	this.Message = message
	this.TimestampAt = timestampAt
	return &this
}

// NewTaskLogMessageWithDefaults instantiates a new TaskLogMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskLogMessageWithDefaults() *TaskLogMessage {
	this := TaskLogMessage{}
	return &this
}

// GetMessage returns the Message field value
func (o *TaskLogMessage) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TaskLogMessage) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TaskLogMessage) SetMessage(v string) {
	o.Message = v
}

// GetTimestampAt returns the TimestampAt field value
func (o *TaskLogMessage) GetTimestampAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TimestampAt
}

// GetTimestampAtOk returns a tuple with the TimestampAt field value
// and a boolean to check if the value has been set.
func (o *TaskLogMessage) GetTimestampAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimestampAt, true
}

// SetTimestampAt sets field value
func (o *TaskLogMessage) SetTimestampAt(v time.Time) {
	o.TimestampAt = v
}

func (o TaskLogMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskLogMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["timestampAt"] = o.TimestampAt
	return toSerialize, nil
}

func (o *TaskLogMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"timestampAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTaskLogMessage := _TaskLogMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTaskLogMessage)

	if err != nil {
		return err
	}

	*o = TaskLogMessage(varTaskLogMessage)

	return err
}

type NullableTaskLogMessage struct {
	value *TaskLogMessage
	isSet bool
}

func (v NullableTaskLogMessage) Get() *TaskLogMessage {
	return v.value
}

func (v *NullableTaskLogMessage) Set(val *TaskLogMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskLogMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskLogMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskLogMessage(val *TaskLogMessage) *NullableTaskLogMessage {
	return &NullableTaskLogMessage{value: val, isSet: true}
}

func (v NullableTaskLogMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskLogMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


