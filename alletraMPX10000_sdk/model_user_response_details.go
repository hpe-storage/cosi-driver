/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserResponseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserResponseDetails{}

// UserResponseDetails struct for UserResponseDetails
type UserResponseDetails struct {
	SecretKey *string `json:"secretKey,omitempty"`
}

// NewUserResponseDetails instantiates a new UserResponseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserResponseDetails() *UserResponseDetails {
	this := UserResponseDetails{}
	return &this
}

// NewUserResponseDetailsWithDefaults instantiates a new UserResponseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserResponseDetailsWithDefaults() *UserResponseDetails {
	this := UserResponseDetails{}
	return &this
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *UserResponseDetails) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResponseDetails) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *UserResponseDetails) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *UserResponseDetails) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o UserResponseDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserResponseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	return toSerialize, nil
}

type NullableUserResponseDetails struct {
	value *UserResponseDetails
	isSet bool
}

func (v NullableUserResponseDetails) Get() *UserResponseDetails {
	return v.value
}

func (v *NullableUserResponseDetails) Set(val *UserResponseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserResponseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserResponseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserResponseDetails(val *UserResponseDetails) *NullableUserResponseDetails {
	return &NullableUserResponseDetails{value: val, isSet: true}
}

func (v NullableUserResponseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserResponseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


