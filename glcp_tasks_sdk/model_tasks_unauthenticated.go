/*
Tasks REST APIs

APIs to get information about the tasks

API version: 0.1.0
Contact: sc-eng-tasks-ms@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TasksUnauthenticated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TasksUnauthenticated{}

// TasksUnauthenticated struct for TasksUnauthenticated
type TasksUnauthenticated struct {
	// Possible values: UNAUTHENTICATED
	ErrorCode interface{} `json:"errorCode,omitempty"`
	// A user friendly error message
	Error string `json:"error"`
	// A unique identifier for the request
	TraceId string `json:"traceId"`
}

type _TasksUnauthenticated TasksUnauthenticated

// NewTasksUnauthenticated instantiates a new TasksUnauthenticated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksUnauthenticated(error_ string, errorCode string, traceId string) *TasksUnauthenticated {
	this := TasksUnauthenticated{}
	this.Error = error_
	this.ErrorCode = errorCode
	this.TraceId = traceId
	return &this
}

// NewTasksUnauthenticatedWithDefaults instantiates a new TasksUnauthenticated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksUnauthenticatedWithDefaults() *TasksUnauthenticated {
	this := TasksUnauthenticated{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TasksUnauthenticated) GetErrorCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TasksUnauthenticated) GetErrorCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return &o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *TasksUnauthenticated) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given interface{} and assigns it to the ErrorCode field.
func (o *TasksUnauthenticated) SetErrorCode(v interface{}) {
	o.ErrorCode = v
}

// GetError returns the Error field value
func (o *TasksUnauthenticated) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *TasksUnauthenticated) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *TasksUnauthenticated) SetError(v string) {
	o.Error = v
}

// GetTraceId returns the TraceId field value
func (o *TasksUnauthenticated) GetTraceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value
// and a boolean to check if the value has been set.
func (o *TasksUnauthenticated) GetTraceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceId, true
}

// SetTraceId sets field value
func (o *TasksUnauthenticated) SetTraceId(v string) {
	o.TraceId = v
}

func (o TasksUnauthenticated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TasksUnauthenticated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	toSerialize["error"] = o.Error
	toSerialize["traceId"] = o.TraceId
	return toSerialize, nil
}

func (o *TasksUnauthenticated) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"error",
		"errorCode",
		"traceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTasksUnauthenticated := _TasksUnauthenticated{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTasksUnauthenticated)

	if err != nil {
		return err
	}

	*o = TasksUnauthenticated(varTasksUnauthenticated)

	return err
}

type NullableTasksUnauthenticated struct {
	value *TasksUnauthenticated
	isSet bool
}

func (v NullableTasksUnauthenticated) Get() *TasksUnauthenticated {
	return v.value
}

func (v *NullableTasksUnauthenticated) Set(val *TasksUnauthenticated) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksUnauthenticated) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksUnauthenticated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksUnauthenticated(val *TasksUnauthenticated) *NullableTasksUnauthenticated {
	return &NullableTasksUnauthenticated{value: val, isSet: true}
}

func (v NullableTasksUnauthenticated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksUnauthenticated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


