/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GroupItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupItem{}

// GroupItem struct for GroupItem
type GroupItem struct {
	Generation *int32 `json:"generation,omitempty"`
	Id *string `json:"id,omitempty"`
	Members []string `json:"members,omitempty"`
	Name *string `json:"name,omitempty"`
	Policy *string `json:"policy,omitempty"`
	Status *string `json:"status,omitempty"`
	SystemUid *string `json:"systemUid,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewGroupItem instantiates a new GroupItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupItem() *GroupItem {
	this := GroupItem{}
	return &this
}

// NewGroupItemWithDefaults instantiates a new GroupItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupItemWithDefaults() *GroupItem {
	this := GroupItem{}
	return &this
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *GroupItem) GetGeneration() int32 {
	if o == nil || IsNil(o.Generation) {
		var ret int32
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetGenerationOk() (*int32, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *GroupItem) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given int32 and assigns it to the Generation field.
func (o *GroupItem) SetGeneration(v int32) {
	o.Generation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GroupItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GroupItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GroupItem) SetId(v string) {
	o.Id = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *GroupItem) GetMembers() []string {
	if o == nil || IsNil(o.Members) {
		var ret []string
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *GroupItem) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []string and assigns it to the Members field.
func (o *GroupItem) SetMembers(v []string) {
	o.Members = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GroupItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GroupItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GroupItem) SetName(v string) {
	o.Name = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *GroupItem) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *GroupItem) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *GroupItem) SetPolicy(v string) {
	o.Policy = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GroupItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GroupItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GroupItem) SetStatus(v string) {
	o.Status = &v
}

// GetSystemUid returns the SystemUid field value if set, zero value otherwise.
func (o *GroupItem) GetSystemUid() string {
	if o == nil || IsNil(o.SystemUid) {
		var ret string
		return ret
	}
	return *o.SystemUid
}

// GetSystemUidOk returns a tuple with the SystemUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetSystemUidOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUid) {
		return nil, false
	}
	return o.SystemUid, true
}

// HasSystemUid returns a boolean if a field has been set.
func (o *GroupItem) HasSystemUid() bool {
	if o != nil && !IsNil(o.SystemUid) {
		return true
	}

	return false
}

// SetSystemUid gets a reference to the given string and assigns it to the SystemUid field.
func (o *GroupItem) SetSystemUid(v string) {
	o.SystemUid = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *GroupItem) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupItem) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *GroupItem) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *GroupItem) SetTenantId(v string) {
	o.TenantId = &v
}

func (o GroupItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SystemUid) {
		toSerialize["systemUid"] = o.SystemUid
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableGroupItem struct {
	value *GroupItem
	isSet bool
}

func (v NullableGroupItem) Get() *GroupItem {
	return v.value
}

func (v *NullableGroupItem) Set(val *GroupItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupItem(val *GroupItem) *NullableGroupItem {
	return &NullableGroupItem{value: val, isSet: true}
}

func (v NullableGroupItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


