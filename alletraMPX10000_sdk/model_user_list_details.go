/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserListDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserListDetails{}

// UserListDetails struct for UserListDetails
type UserListDetails struct {
	Generation NullableInt32 `json:"generation,omitempty"`
	Id *string `json:"id,omitempty"`
	MemberOf []string `json:"memberOf,omitempty"`
	Name *string `json:"name,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
	SystemUid *string `json:"systemUid,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewUserListDetails instantiates a new UserListDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserListDetails() *UserListDetails {
	this := UserListDetails{}
	return &this
}

// NewUserListDetailsWithDefaults instantiates a new UserListDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserListDetailsWithDefaults() *UserListDetails {
	this := UserListDetails{}
	return &this
}

// GetGeneration returns the Generation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserListDetails) GetGeneration() int32 {
	if o == nil || IsNil(o.Generation.Get()) {
		var ret int32
		return ret
	}
	return *o.Generation.Get()
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserListDetails) GetGenerationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Generation.Get(), o.Generation.IsSet()
}

// HasGeneration returns a boolean if a field has been set.
func (o *UserListDetails) HasGeneration() bool {
	if o != nil && o.Generation.IsSet() {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given NullableInt32 and assigns it to the Generation field.
func (o *UserListDetails) SetGeneration(v int32) {
	o.Generation.Set(&v)
}
// SetGenerationNil sets the value for Generation to be an explicit nil
func (o *UserListDetails) SetGenerationNil() {
	o.Generation.Set(nil)
}

// UnsetGeneration ensures that no value is present for Generation, not even an explicit nil
func (o *UserListDetails) UnsetGeneration() {
	o.Generation.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserListDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserListDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserListDetails) SetId(v string) {
	o.Id = &v
}

// GetMemberOf returns the MemberOf field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserListDetails) GetMemberOf() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MemberOf
}

// GetMemberOfOk returns a tuple with the MemberOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserListDetails) GetMemberOfOk() ([]string, bool) {
	if o == nil || IsNil(o.MemberOf) {
		return nil, false
	}
	return o.MemberOf, true
}

// HasMemberOf returns a boolean if a field has been set.
func (o *UserListDetails) HasMemberOf() bool {
	if o != nil && !IsNil(o.MemberOf) {
		return true
	}

	return false
}

// SetMemberOf gets a reference to the given []string and assigns it to the MemberOf field.
func (o *UserListDetails) SetMemberOf(v []string) {
	o.MemberOf = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserListDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserListDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserListDetails) SetName(v string) {
	o.Name = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *UserListDetails) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListDetails) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *UserListDetails) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *UserListDetails) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetSystemUid returns the SystemUid field value if set, zero value otherwise.
func (o *UserListDetails) GetSystemUid() string {
	if o == nil || IsNil(o.SystemUid) {
		var ret string
		return ret
	}
	return *o.SystemUid
}

// GetSystemUidOk returns a tuple with the SystemUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListDetails) GetSystemUidOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUid) {
		return nil, false
	}
	return o.SystemUid, true
}

// HasSystemUid returns a boolean if a field has been set.
func (o *UserListDetails) HasSystemUid() bool {
	if o != nil && !IsNil(o.SystemUid) {
		return true
	}

	return false
}

// SetSystemUid gets a reference to the given string and assigns it to the SystemUid field.
func (o *UserListDetails) SetSystemUid(v string) {
	o.SystemUid = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *UserListDetails) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListDetails) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *UserListDetails) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *UserListDetails) SetTenantId(v string) {
	o.TenantId = &v
}

func (o UserListDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserListDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Generation.IsSet() {
		toSerialize["generation"] = o.Generation.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.MemberOf != nil {
		toSerialize["memberOf"] = o.MemberOf
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.SystemUid) {
		toSerialize["systemUid"] = o.SystemUid
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableUserListDetails struct {
	value *UserListDetails
	isSet bool
}

func (v NullableUserListDetails) Get() *UserListDetails {
	return v.value
}

func (v *NullableUserListDetails) Set(val *UserListDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserListDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserListDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserListDetails(val *UserListDetails) *NullableUserListDetails {
	return &NullableUserListDetails{value: val, isSet: true}
}

func (v NullableUserListDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserListDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


