/*
Tasks REST APIs

APIs to get information about the tasks

API version: 0.1.0
Contact: sc-eng-tasks-ms@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CommonResourceProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonResourceProperties{}

// CommonResourceProperties Common properties included in all resource models.
type CommonResourceProperties struct {
	// The customer application identifier
	CustomerId *string `json:"customerId,omitempty"`
	// A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.
	Generation *int64 `json:"generation,omitempty"`
	// An identifier for the resource, usually a UUID.
	Id *string `json:"id,omitempty"`
	// A system specified name for the resource.
	Name *string `json:"name,omitempty"`
	// The 'self' reference for this resource.
	ResourceUri *string `json:"resourceUri,omitempty"`
	// The type of resource.
	Type *string `json:"type,omitempty"`
}

// NewCommonResourceProperties instantiates a new CommonResourceProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonResourceProperties() *CommonResourceProperties {
	this := CommonResourceProperties{}
	return &this
}

// NewCommonResourcePropertiesWithDefaults instantiates a new CommonResourceProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonResourcePropertiesWithDefaults() *CommonResourceProperties {
	this := CommonResourceProperties{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *CommonResourceProperties) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetGeneration() int64 {
	if o == nil || IsNil(o.Generation) {
		var ret int64
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetGenerationOk() (*int64, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given int64 and assigns it to the Generation field.
func (o *CommonResourceProperties) SetGeneration(v int64) {
	o.Generation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonResourceProperties) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonResourceProperties) SetName(v string) {
	o.Name = &v
}

// GetResourceUri returns the ResourceUri field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetResourceUri() string {
	if o == nil || IsNil(o.ResourceUri) {
		var ret string
		return ret
	}
	return *o.ResourceUri
}

// GetResourceUriOk returns a tuple with the ResourceUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetResourceUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUri) {
		return nil, false
	}
	return o.ResourceUri, true
}

// HasResourceUri returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasResourceUri() bool {
	if o != nil && !IsNil(o.ResourceUri) {
		return true
	}

	return false
}

// SetResourceUri gets a reference to the given string and assigns it to the ResourceUri field.
func (o *CommonResourceProperties) SetResourceUri(v string) {
	o.ResourceUri = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommonResourceProperties) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResourceProperties) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommonResourceProperties) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommonResourceProperties) SetType(v string) {
	o.Type = &v
}

func (o CommonResourceProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonResourceProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ResourceUri) {
		toSerialize["resourceUri"] = o.ResourceUri
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCommonResourceProperties struct {
	value *CommonResourceProperties
	isSet bool
}

func (v NullableCommonResourceProperties) Get() *CommonResourceProperties {
	return v.value
}

func (v *NullableCommonResourceProperties) Set(val *CommonResourceProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonResourceProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonResourceProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonResourceProperties(val *CommonResourceProperties) *NullableCommonResourceProperties {
	return &NullableCommonResourceProperties{value: val, isSet: true}
}

func (v NullableCommonResourceProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonResourceProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


