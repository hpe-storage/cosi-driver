/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BucketCapacityHistory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketCapacityHistory{}

// BucketCapacityHistory bucket capacity trends for given granularity and time range
type BucketCapacityHistory struct {
	CapacityData NullableBucketsCapacityHistoricalMetricData `json:"capacityData,omitempty"`
	// end time of history data
	EndTime NullableInt32 `json:"endTime,omitempty"`
	// requestUri for detailed storage object7
	RequestUri NullableString `json:"requestUri,omitempty"`
	// start time of history data
	StartTime NullableInt32 `json:"startTime,omitempty"`
}

// NewBucketCapacityHistory instantiates a new BucketCapacityHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketCapacityHistory() *BucketCapacityHistory {
	this := BucketCapacityHistory{}
	return &this
}

// NewBucketCapacityHistoryWithDefaults instantiates a new BucketCapacityHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketCapacityHistoryWithDefaults() *BucketCapacityHistory {
	this := BucketCapacityHistory{}
	return &this
}

// GetCapacityData returns the CapacityData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketCapacityHistory) GetCapacityData() BucketsCapacityHistoricalMetricData {
	if o == nil || IsNil(o.CapacityData.Get()) {
		var ret BucketsCapacityHistoricalMetricData
		return ret
	}
	return *o.CapacityData.Get()
}

// GetCapacityDataOk returns a tuple with the CapacityData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketCapacityHistory) GetCapacityDataOk() (*BucketsCapacityHistoricalMetricData, bool) {
	if o == nil {
		return nil, false
	}
	return o.CapacityData.Get(), o.CapacityData.IsSet()
}

// HasCapacityData returns a boolean if a field has been set.
func (o *BucketCapacityHistory) HasCapacityData() bool {
	if o != nil && o.CapacityData.IsSet() {
		return true
	}

	return false
}

// SetCapacityData gets a reference to the given NullableBucketsCapacityHistoricalMetricData and assigns it to the CapacityData field.
func (o *BucketCapacityHistory) SetCapacityData(v BucketsCapacityHistoricalMetricData) {
	o.CapacityData.Set(&v)
}
// SetCapacityDataNil sets the value for CapacityData to be an explicit nil
func (o *BucketCapacityHistory) SetCapacityDataNil() {
	o.CapacityData.Set(nil)
}

// UnsetCapacityData ensures that no value is present for CapacityData, not even an explicit nil
func (o *BucketCapacityHistory) UnsetCapacityData() {
	o.CapacityData.Unset()
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketCapacityHistory) GetEndTime() int32 {
	if o == nil || IsNil(o.EndTime.Get()) {
		var ret int32
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketCapacityHistory) GetEndTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *BucketCapacityHistory) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableInt32 and assigns it to the EndTime field.
func (o *BucketCapacityHistory) SetEndTime(v int32) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *BucketCapacityHistory) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *BucketCapacityHistory) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetRequestUri returns the RequestUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketCapacityHistory) GetRequestUri() string {
	if o == nil || IsNil(o.RequestUri.Get()) {
		var ret string
		return ret
	}
	return *o.RequestUri.Get()
}

// GetRequestUriOk returns a tuple with the RequestUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketCapacityHistory) GetRequestUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestUri.Get(), o.RequestUri.IsSet()
}

// HasRequestUri returns a boolean if a field has been set.
func (o *BucketCapacityHistory) HasRequestUri() bool {
	if o != nil && o.RequestUri.IsSet() {
		return true
	}

	return false
}

// SetRequestUri gets a reference to the given NullableString and assigns it to the RequestUri field.
func (o *BucketCapacityHistory) SetRequestUri(v string) {
	o.RequestUri.Set(&v)
}
// SetRequestUriNil sets the value for RequestUri to be an explicit nil
func (o *BucketCapacityHistory) SetRequestUriNil() {
	o.RequestUri.Set(nil)
}

// UnsetRequestUri ensures that no value is present for RequestUri, not even an explicit nil
func (o *BucketCapacityHistory) UnsetRequestUri() {
	o.RequestUri.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketCapacityHistory) GetStartTime() int32 {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret int32
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketCapacityHistory) GetStartTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *BucketCapacityHistory) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableInt32 and assigns it to the StartTime field.
func (o *BucketCapacityHistory) SetStartTime(v int32) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *BucketCapacityHistory) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *BucketCapacityHistory) UnsetStartTime() {
	o.StartTime.Unset()
}

func (o BucketCapacityHistory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketCapacityHistory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CapacityData.IsSet() {
		toSerialize["capacityData"] = o.CapacityData.Get()
	}
	if o.EndTime.IsSet() {
		toSerialize["endTime"] = o.EndTime.Get()
	}
	if o.RequestUri.IsSet() {
		toSerialize["requestUri"] = o.RequestUri.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["startTime"] = o.StartTime.Get()
	}
	return toSerialize, nil
}

type NullableBucketCapacityHistory struct {
	value *BucketCapacityHistory
	isSet bool
}

func (v NullableBucketCapacityHistory) Get() *BucketCapacityHistory {
	return v.value
}

func (v *NullableBucketCapacityHistory) Set(val *BucketCapacityHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketCapacityHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketCapacityHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketCapacityHistory(val *BucketCapacityHistory) *NullableBucketCapacityHistory {
	return &NullableBucketCapacityHistory{value: val, isSet: true}
}

func (v NullableBucketCapacityHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketCapacityHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


