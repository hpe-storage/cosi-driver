/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BucketsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketsList{}

// BucketsList struct for BucketsList
type BucketsList struct {
	Items []Buckets `json:"items,omitempty"`
	// page limit
	PageLimit NullableInt32 `json:"pageLimit,omitempty"`
	// page offset
	PageOffset NullableInt32 `json:"pageOffset,omitempty"`
	// Number of recommendation lists
	Total NullableInt32 `json:"total,omitempty"`
}

// NewBucketsList instantiates a new BucketsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketsList() *BucketsList {
	this := BucketsList{}
	return &this
}

// NewBucketsListWithDefaults instantiates a new BucketsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketsListWithDefaults() *BucketsList {
	this := BucketsList{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsList) GetItems() []Buckets {
	if o == nil {
		var ret []Buckets
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsList) GetItemsOk() ([]Buckets, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BucketsList) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Buckets and assigns it to the Items field.
func (o *BucketsList) SetItems(v []Buckets) {
	o.Items = v
}

// GetPageLimit returns the PageLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsList) GetPageLimit() int32 {
	if o == nil || IsNil(o.PageLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.PageLimit.Get()
}

// GetPageLimitOk returns a tuple with the PageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsList) GetPageLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageLimit.Get(), o.PageLimit.IsSet()
}

// HasPageLimit returns a boolean if a field has been set.
func (o *BucketsList) HasPageLimit() bool {
	if o != nil && o.PageLimit.IsSet() {
		return true
	}

	return false
}

// SetPageLimit gets a reference to the given NullableInt32 and assigns it to the PageLimit field.
func (o *BucketsList) SetPageLimit(v int32) {
	o.PageLimit.Set(&v)
}
// SetPageLimitNil sets the value for PageLimit to be an explicit nil
func (o *BucketsList) SetPageLimitNil() {
	o.PageLimit.Set(nil)
}

// UnsetPageLimit ensures that no value is present for PageLimit, not even an explicit nil
func (o *BucketsList) UnsetPageLimit() {
	o.PageLimit.Unset()
}

// GetPageOffset returns the PageOffset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsList) GetPageOffset() int32 {
	if o == nil || IsNil(o.PageOffset.Get()) {
		var ret int32
		return ret
	}
	return *o.PageOffset.Get()
}

// GetPageOffsetOk returns a tuple with the PageOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsList) GetPageOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageOffset.Get(), o.PageOffset.IsSet()
}

// HasPageOffset returns a boolean if a field has been set.
func (o *BucketsList) HasPageOffset() bool {
	if o != nil && o.PageOffset.IsSet() {
		return true
	}

	return false
}

// SetPageOffset gets a reference to the given NullableInt32 and assigns it to the PageOffset field.
func (o *BucketsList) SetPageOffset(v int32) {
	o.PageOffset.Set(&v)
}
// SetPageOffsetNil sets the value for PageOffset to be an explicit nil
func (o *BucketsList) SetPageOffsetNil() {
	o.PageOffset.Set(nil)
}

// UnsetPageOffset ensures that no value is present for PageOffset, not even an explicit nil
func (o *BucketsList) UnsetPageOffset() {
	o.PageOffset.Unset()
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BucketsList) GetTotal() int32 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret int32
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BucketsList) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *BucketsList) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableInt32 and assigns it to the Total field.
func (o *BucketsList) SetTotal(v int32) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *BucketsList) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *BucketsList) UnsetTotal() {
	o.Total.Unset()
}

func (o BucketsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.PageLimit.IsSet() {
		toSerialize["pageLimit"] = o.PageLimit.Get()
	}
	if o.PageOffset.IsSet() {
		toSerialize["pageOffset"] = o.PageOffset.Get()
	}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	return toSerialize, nil
}

type NullableBucketsList struct {
	value *BucketsList
	isSet bool
}

func (v NullableBucketsList) Get() *BucketsList {
	return v.value
}

func (v *NullableBucketsList) Set(val *BucketsList) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketsList) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketsList(val *BucketsList) *NullableBucketsList {
	return &NullableBucketsList{value: val, isSet: true}
}

func (v NullableBucketsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


