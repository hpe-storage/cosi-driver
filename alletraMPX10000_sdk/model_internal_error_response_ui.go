/*
Device Type-7 APIs

APIs to get information about the HPE Alletra Storage MP X10000 system

API version: 0.1.0
Contact: object-svc-team@hpe.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InternalErrorResponseUi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalErrorResponseUi{}

// InternalErrorResponseUi Standardized model for the error response from the server, returned for any internal / unexpected errors
type InternalErrorResponseUi struct {
	// Description of the error
	Error *string `json:"error,omitempty"`
	// Internal error code
	ErrorCode *string `json:"errorCode,omitempty"`
}

// NewInternalErrorResponseUi instantiates a new InternalErrorResponseUi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalErrorResponseUi() *InternalErrorResponseUi {
	this := InternalErrorResponseUi{}
	return &this
}

// NewInternalErrorResponseUiWithDefaults instantiates a new InternalErrorResponseUi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalErrorResponseUiWithDefaults() *InternalErrorResponseUi {
	this := InternalErrorResponseUi{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InternalErrorResponseUi) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalErrorResponseUi) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InternalErrorResponseUi) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InternalErrorResponseUi) SetError(v string) {
	o.Error = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *InternalErrorResponseUi) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalErrorResponseUi) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *InternalErrorResponseUi) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *InternalErrorResponseUi) SetErrorCode(v string) {
	o.ErrorCode = &v
}

func (o InternalErrorResponseUi) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalErrorResponseUi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return toSerialize, nil
}

type NullableInternalErrorResponseUi struct {
	value *InternalErrorResponseUi
	isSet bool
}

func (v NullableInternalErrorResponseUi) Get() *InternalErrorResponseUi {
	return v.value
}

func (v *NullableInternalErrorResponseUi) Set(val *InternalErrorResponseUi) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalErrorResponseUi) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalErrorResponseUi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalErrorResponseUi(val *InternalErrorResponseUi) *NullableInternalErrorResponseUi {
	return &NullableInternalErrorResponseUi{value: val, isSet: true}
}

func (v NullableInternalErrorResponseUi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalErrorResponseUi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


